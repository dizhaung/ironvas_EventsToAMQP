# OpenVAS Server ip address
openvas.server.ip = 10.240.100.12

# OpenVAS Manager port to connect to
openvas.server.omp.port = 9390

# OpenVAS Manager credentials
openvas.server.omp.user = admin
openvas.server.omp.password = admin

# OpenVAS version (for self-publish information)
openvas.server.version = 8.0

# IF-MAP authentication method, valid values are 'cert' and 'basic'
ifmap.server.auth.method = cert

# IF-MAP connection information
ifmap.server.url.basic = https://10.240.100.201:8443
ifmap.server.url.cert = https://10.240.100.201:8444
ifmap.server.auth.basic.user = test
ifmap.server.auth.basic.password = test

# the path to the keystore
keystore.path = /ironvas.jks

# the keystore password
keystore.password = ironvas

# the interval between two renewSession commands to the MAPS
ironvas.ifmap.interval = 120

# the path to the vulnerability filter
ironvas.filter.path = ./filter.js

# ---- publisher specific ---- #

# activate the publisher?
ironvas.publisher.enable = true

# activate self-publishing (information about the OpenVAS service)
ironvas.selfpublish.enable = true
ironvas.selfpublish.device = openvas-device

# the interval in seconds in which ironvas will fetch the OpenVAS reports
ironvas.omp.interval = 120

# The class name of the converter. The class must have a no-argument default
# constructor and implement the Converter interface.
ironvas.publish.converter = de.hshannover.f4.trust.ironvas.converter.EventUpdateConverter
#ironvas.publish.converter = de.hshannover.f4.trust.ironvas.converter.EsukomFeatureConverter


# ---- subscriber specific ---- #

# activate the subscriber?
ironvas.subscriber.enable = false

# the name of the PDP
ironvas.subscriber.pdp = 111:44

# a prefix used for the OpenVAS target and task
ironvas.subscriber.namePrefix = ironvas:

# the name of the OpenVAS configuration which will be used for new tasks
ironvas.subscriber.config = ironvas-config

# ironvas event amqp publisher connection
# when true = no events are published via ifmap
ironvas.eventstream.publish.enable = true

# amqp credentials if eventstream mode enabled
amqp.publish.server.tls.enable = false
amqp.publish.server.ip = 10.240.100.2
amqp.publish.server.port = 5672
amqp.publish.server.virtualhost = clearer
amqp.publish.exchange.name = clearer.testin
amqp.publish.user.name = clearer-t2
amqp.publish.user.password = clearer2016


# ironvas amqp subscriber connection
ironvas.eventstream.subscribe.enable = true

amqp.subscribe.queue.name = clearer.ironvas.in
amqp.subscribe.queue.durable = true

# amqp subscriber credentials
amqp.subscribe.server.tls.enable = true
amqp.subscribe.server.ip = 10.240.100.2
amqp.subscribe.server.port = 5671
amqp.subscribe.server.virtualhost = clearer
amqp.subscribe.exchange.name = clearer.siemgui.scheduler.out
amqp.subscribe.exchange.routingkey = ironvas
amqp.subscribe.user.name = clearer-t2
amqp.subscribe.user.password = clearer2016

# Use the same amqp connection for the publisher and subscriber
amqp.share_publish_connection = true

# name of the default configuration file which will be used if the one
# specified in the IronvasScanEvent is invalid.
amqp.subscriber.defaultconfig = Full and fast

#e nables proccessing of the IronvasDeleteTaskEvent
amqp.subscriber.allowdeleteevent = true
